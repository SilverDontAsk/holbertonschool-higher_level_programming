The ``say_my_name`` module
======================

Using ``say_my_name``
-------------------

This is an example text file in reStructuredText format.  First import
``say_my_name`` from the ``say_my_name`` module:

    >>> say_my_name = __import__('3-say_my_name').say_my_name

Test Cases:

1. Test with both first_name and last_name as strings.
   >>> say_my_name("John", "Doe")
   My name is John Doe

2. Test with only first_name as a string.
   >>> say_my_name("Alice")
   My name is Alice

3. Test with both first_name and last_name as integers.
   >>> say_my_name(123, "Smith")
   Traceback (most recent call last):
     ...
   TypeError: first_name must be a string

4. Test with first_name as a string and last_name as an integer.
   >>> say_my_name("Emma", 456)
   Traceback (most recent call last):
     ...
   TypeError: last_name must be a string

5. Test with both first_name and last_name as empty strings.
   >>> say_my_name("", "")
   My name is

6. Test with first_name as a string and last_name as a string with spaces and tabs.
   >>> say_my_name("   ", "  \t  \n")
   My name is   
